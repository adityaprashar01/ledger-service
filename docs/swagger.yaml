basePath: /
definitions:
  models.Customer:
    properties:
      customer_id:
        type: string
      initial_balance:
        type: number
      name:
        type: string
    type: object
  models.Transaction:
    properties:
      amount:
        type: number
      customer_id:
        type: string
      timestamp:
        type: string
      transaction_id:
        type: string
      type:
        type: string
    type: object
host: ledger-service.onrender.com
info:
  contact: {}
  description: Backend service to manage customer ledger with transaction support.
  title: Ledger Service API
  version: "1.0"
paths:
  /customers:
    post:
      consumes:
      - application/json
      description: Adds a new customer to the ledger
      parameters:
      - description: Customer Data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new customer
      tags:
      - Customers
  /customers/{customer_id}/balance:
    get:
      description: Retrieves the current balance of a customer
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get customer balance
      tags:
      - Customers
  /customers/{customer_id}/transactions:
    get:
      description: Retrieves all transactions for a given customer with pagination
      parameters:
      - description: Customer ID
        in: path
        name: customer_id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get transaction history
      tags:
      - Transactions
  /transactions:
    post:
      consumes:
      - application/json
      description: Processes a debit or credit transaction for a customer
      parameters:
      - description: Transaction Info
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new transaction
      tags:
      - Transactions
schemes:
- https
swagger: "2.0"
